I"3<p>When i started programming i thought that the only thing there was when writing code was to handle the task at hand. Later i would organize that code into functions and classes, write some documentation about it and hopefully whenever i needed to change something i could catch up really quickly.</p>

<p>The problem with that approach is when i did changes that broke the code that i have writen already. Maybe some new function did not do what i wanted. In these hard times i would place my hopes to simple print statements like</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># some code
print('Yo')
# another chunk of code with a variable a
print(a)
print(type(a))
print('Bye')
</code></pre></div></div>
<p>I would then fix the problem and delete the print statements (until the next bug).</p>

<p>Testing comes to liberates us from this perpetual headache by formalising the way our program should work. Ideally, you should first write a test about a chunk of your program, make it fail and then implement the least effort to get that test to pass. By going through these circles of testing, programming and then testing again, you would realize Test Driven Development mindset and be more at ease about the functionality of your code. So let’s start!</p>

<h1 id="objective">Objective</h1>
<p>Create a simple Command Line Interface App and thoroughly test it using the pytest module. 
I intend to</p>
<ol>
  <li>Cover the most useful features of pytest library</li>
  <li>Introduce basic concepts of Test Driven Development</li>
</ol>

<h2 id="the-app">The App</h2>
<p>We will create an command line interface app that  a teacher would use to grade the students taking his lecture. Of course you can create the same functionality in other ways, but we wanted a relatively simple app as a test bed for the creation of our tests.</p>

<p>We want to create the following basic functionality with this app</p>
<ol>
  <li>Insert a student record (Name, Surname, Grade, Exercise identifier)</li>
  <li>Update a student record</li>
  <li>Delete a student record</li>
  <li>Aggregation functionality
    <ul>
      <li>Delete every record for a student</li>
      <li>Find the final grade of student based on some formula for the weight of each exercise</li>
      <li>Return top K or bottom K performing students</li>
    </ul>
  </li>
</ol>

<p>The finished Grades app can be found <a href="https://github.com/thanos91/grades">here</a></p>

<h2 id="the-database">The Database</h2>

<h2 id="lets-dive">Let’s Dive</h2>
<p>You could clone the final project in a folder and just run the tests, but this is no fun, so i strongly recommend to follow my pace and write ti from</p>

<p><img src="/assets/img/we-in-rest.jpg" alt="I and My friends" /></p>

<h1 id="references">References</h1>
<p>For the material i was inspired by the following books</p>
<ol>
  <li>Python Testing with pytest Simple, Rapid, Effective, and Scalable by Brian Okken</li>
  <li>Test-Driven Development with Python: Obey the Testing Goat: Using Django, Selenium, and JavaScript</li>
</ol>
:ET